#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAKA.Bussiness
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PojectDatabase")]
	public partial class SAKADataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKPI(KPI instance);
    partial void UpdateKPI(KPI instance);
    partial void DeleteKPI(KPI instance);
    partial void InsertKPI_CALCULATION_LOG(KPI_CALCULATION_LOG instance);
    partial void UpdateKPI_CALCULATION_LOG(KPI_CALCULATION_LOG instance);
    partial void DeleteKPI_CALCULATION_LOG(KPI_CALCULATION_LOG instance);
    partial void InsertKPI_VALUE(KPI_VALUE instance);
    partial void UpdateKPI_VALUE(KPI_VALUE instance);
    partial void DeleteKPI_VALUE(KPI_VALUE instance);
    #endregion
		
		public SAKADataDataContext() : 
				base(global::SAKA.Bussiness.Properties.Settings.Default.PojectDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SAKADataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAKADataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAKADataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAKADataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<KPI> KPIs
		{
			get
			{
				return this.GetTable<KPI>();
			}
		}
		
		public System.Data.Linq.Table<KPI_CALCULATION_LOG> KPI_CALCULATION_LOGs
		{
			get
			{
				return this.GetTable<KPI_CALCULATION_LOG>();
			}
		}
		
		public System.Data.Linq.Table<KPI_VALUE> KPI_VALUEs
		{
			get
			{
				return this.GetTable<KPI_VALUE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KPI")]
	public partial class KPI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _NAME;
		
		private decimal _TARGET;
		
		private string _UNIT;
		
		private bool _THRESHOLD_TYPE;
		
		private decimal _THRESHOLD;
		
		private bool _DIRECTION;
		
		private System.DateTime _CREATİON_DATE;
		
		private System.Nullable<System.DateTime> _MODIFICATION_DATE;
		
		private bool _AKTIF;
		
		private string _PERIOD;
		
		private string _CODE;
		
		private string _CONNSTRING;
		
		private EntitySet<KPI_CALCULATION_LOG> _KPI_CALCULATION_LOGs;
		
		private EntitySet<KPI_VALUE> _KPI_VALUEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnTARGETChanging(decimal value);
    partial void OnTARGETChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnTHRESHOLD_TYPEChanging(bool value);
    partial void OnTHRESHOLD_TYPEChanged();
    partial void OnTHRESHOLDChanging(decimal value);
    partial void OnTHRESHOLDChanged();
    partial void OnDIRECTIONChanging(bool value);
    partial void OnDIRECTIONChanged();
    partial void OnCREATİON_DATEChanging(System.DateTime value);
    partial void OnCREATİON_DATEChanged();
    partial void OnMODIFICATION_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFICATION_DATEChanged();
    partial void OnAKTIFChanging(bool value);
    partial void OnAKTIFChanged();
    partial void OnPERIODChanging(string value);
    partial void OnPERIODChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnCONNSTRINGChanging(string value);
    partial void OnCONNSTRINGChanged();
    #endregion
		
		public KPI()
		{
			this._KPI_CALCULATION_LOGs = new EntitySet<KPI_CALCULATION_LOG>(new Action<KPI_CALCULATION_LOG>(this.attach_KPI_CALCULATION_LOGs), new Action<KPI_CALCULATION_LOG>(this.detach_KPI_CALCULATION_LOGs));
			this._KPI_VALUEs = new EntitySet<KPI_VALUE>(new Action<KPI_VALUE>(this.attach_KPI_VALUEs), new Action<KPI_VALUE>(this.detach_KPI_VALUEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARGET", DbType="Decimal(12,2) NOT NULL")]
		public decimal TARGET
		{
			get
			{
				return this._TARGET;
			}
			set
			{
				if ((this._TARGET != value))
				{
					this.OnTARGETChanging(value);
					this.SendPropertyChanging();
					this._TARGET = value;
					this.SendPropertyChanged("TARGET");
					this.OnTARGETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="NVarChar(30)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THRESHOLD_TYPE", DbType="Bit NOT NULL")]
		public bool THRESHOLD_TYPE
		{
			get
			{
				return this._THRESHOLD_TYPE;
			}
			set
			{
				if ((this._THRESHOLD_TYPE != value))
				{
					this.OnTHRESHOLD_TYPEChanging(value);
					this.SendPropertyChanging();
					this._THRESHOLD_TYPE = value;
					this.SendPropertyChanged("THRESHOLD_TYPE");
					this.OnTHRESHOLD_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THRESHOLD", DbType="Decimal(12,2) NOT NULL")]
		public decimal THRESHOLD
		{
			get
			{
				return this._THRESHOLD;
			}
			set
			{
				if ((this._THRESHOLD != value))
				{
					this.OnTHRESHOLDChanging(value);
					this.SendPropertyChanging();
					this._THRESHOLD = value;
					this.SendPropertyChanged("THRESHOLD");
					this.OnTHRESHOLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECTION", DbType="Bit NOT NULL")]
		public bool DIRECTION
		{
			get
			{
				return this._DIRECTION;
			}
			set
			{
				if ((this._DIRECTION != value))
				{
					this.OnDIRECTIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECTION = value;
					this.SendPropertyChanged("DIRECTION");
					this.OnDIRECTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATİON_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATİON_DATE
		{
			get
			{
				return this._CREATİON_DATE;
			}
			set
			{
				if ((this._CREATİON_DATE != value))
				{
					this.OnCREATİON_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATİON_DATE = value;
					this.SendPropertyChanged("CREATİON_DATE");
					this.OnCREATİON_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFICATION_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFICATION_DATE
		{
			get
			{
				return this._MODIFICATION_DATE;
			}
			set
			{
				if ((this._MODIFICATION_DATE != value))
				{
					this.OnMODIFICATION_DATEChanging(value);
					this.SendPropertyChanging();
					this._MODIFICATION_DATE = value;
					this.SendPropertyChanged("MODIFICATION_DATE");
					this.OnMODIFICATION_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKTIF", DbType="Bit NOT NULL")]
		public bool AKTIF
		{
			get
			{
				return this._AKTIF;
			}
			set
			{
				if ((this._AKTIF != value))
				{
					this.OnAKTIFChanging(value);
					this.SendPropertyChanging();
					this._AKTIF = value;
					this.SendPropertyChanged("AKTIF");
					this.OnAKTIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this.OnPERIODChanging(value);
					this.SendPropertyChanging();
					this._PERIOD = value;
					this.SendPropertyChanged("PERIOD");
					this.OnPERIODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(50)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONNSTRING", DbType="VarChar(50)")]
		public string CONNSTRING
		{
			get
			{
				return this._CONNSTRING;
			}
			set
			{
				if ((this._CONNSTRING != value))
				{
					this.OnCONNSTRINGChanging(value);
					this.SendPropertyChanging();
					this._CONNSTRING = value;
					this.SendPropertyChanged("CONNSTRING");
					this.OnCONNSTRINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KPI_KPI_CALCULATION_LOG", Storage="_KPI_CALCULATION_LOGs", ThisKey="ID", OtherKey="KPI_ID")]
		public EntitySet<KPI_CALCULATION_LOG> KPI_CALCULATION_LOGs
		{
			get
			{
				return this._KPI_CALCULATION_LOGs;
			}
			set
			{
				this._KPI_CALCULATION_LOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KPI_KPI_VALUE", Storage="_KPI_VALUEs", ThisKey="ID", OtherKey="KPI_ID")]
		public EntitySet<KPI_VALUE> KPI_VALUEs
		{
			get
			{
				return this._KPI_VALUEs;
			}
			set
			{
				this._KPI_VALUEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KPI_CALCULATION_LOGs(KPI_CALCULATION_LOG entity)
		{
			this.SendPropertyChanging();
			entity.KPI = this;
		}
		
		private void detach_KPI_CALCULATION_LOGs(KPI_CALCULATION_LOG entity)
		{
			this.SendPropertyChanging();
			entity.KPI = null;
		}
		
		private void attach_KPI_VALUEs(KPI_VALUE entity)
		{
			this.SendPropertyChanging();
			entity.KPI = this;
		}
		
		private void detach_KPI_VALUEs(KPI_VALUE entity)
		{
			this.SendPropertyChanging();
			entity.KPI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KPI_CALCULATION_LOG")]
	public partial class KPI_CALCULATION_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _KPI_ID;
		
		private System.DateTime _DATE;
		
		private bool _SUCCESS;
		
		private string _EXCEPTION_MESSAGE;
		
		private EntityRef<KPI> _KPI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnKPI_IDChanging(System.Guid value);
    partial void OnKPI_IDChanged();
    partial void OnDATEChanging(System.DateTime value);
    partial void OnDATEChanged();
    partial void OnSUCCESSChanging(bool value);
    partial void OnSUCCESSChanged();
    partial void OnEXCEPTION_MESSAGEChanging(string value);
    partial void OnEXCEPTION_MESSAGEChanged();
    #endregion
		
		public KPI_CALCULATION_LOG()
		{
			this._KPI = default(EntityRef<KPI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPI_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid KPI_ID
		{
			get
			{
				return this._KPI_ID;
			}
			set
			{
				if ((this._KPI_ID != value))
				{
					if (this._KPI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKPI_IDChanging(value);
					this.SendPropertyChanging();
					this._KPI_ID = value;
					this.SendPropertyChanged("KPI_ID");
					this.OnKPI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUCCESS", DbType="Bit NOT NULL")]
		public bool SUCCESS
		{
			get
			{
				return this._SUCCESS;
			}
			set
			{
				if ((this._SUCCESS != value))
				{
					this.OnSUCCESSChanging(value);
					this.SendPropertyChanging();
					this._SUCCESS = value;
					this.SendPropertyChanged("SUCCESS");
					this.OnSUCCESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXCEPTION_MESSAGE", DbType="VarChar(MAX)")]
		public string EXCEPTION_MESSAGE
		{
			get
			{
				return this._EXCEPTION_MESSAGE;
			}
			set
			{
				if ((this._EXCEPTION_MESSAGE != value))
				{
					this.OnEXCEPTION_MESSAGEChanging(value);
					this.SendPropertyChanging();
					this._EXCEPTION_MESSAGE = value;
					this.SendPropertyChanged("EXCEPTION_MESSAGE");
					this.OnEXCEPTION_MESSAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KPI_KPI_CALCULATION_LOG", Storage="_KPI", ThisKey="KPI_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KPI KPI
		{
			get
			{
				return this._KPI.Entity;
			}
			set
			{
				KPI previousValue = this._KPI.Entity;
				if (((previousValue != value) 
							|| (this._KPI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KPI.Entity = null;
						previousValue.KPI_CALCULATION_LOGs.Remove(this);
					}
					this._KPI.Entity = value;
					if ((value != null))
					{
						value.KPI_CALCULATION_LOGs.Add(this);
						this._KPI_ID = value.ID;
					}
					else
					{
						this._KPI_ID = default(System.Guid);
					}
					this.SendPropertyChanged("KPI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KPI_VALUE")]
	public partial class KPI_VALUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DATE;
		
		private decimal _VALUE;
		
		private System.Guid _KPI_ID;
		
		private decimal _TARGET;
		
		private bool _THRESHOLD_TYPE;
		
		private decimal _THRESHOLD;
		
		private EntityRef<KPI> _KPI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATEChanging(System.DateTime value);
    partial void OnDATEChanged();
    partial void OnVALUEChanging(decimal value);
    partial void OnVALUEChanged();
    partial void OnKPI_IDChanging(System.Guid value);
    partial void OnKPI_IDChanged();
    partial void OnTARGETChanging(decimal value);
    partial void OnTARGETChanged();
    partial void OnTHRESHOLD_TYPEChanging(bool value);
    partial void OnTHRESHOLD_TYPEChanged();
    partial void OnTHRESHOLDChanging(decimal value);
    partial void OnTHRESHOLDChanged();
    #endregion
		
		public KPI_VALUE()
		{
			this._KPI = default(EntityRef<KPI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="Decimal(12,2) NOT NULL")]
		public decimal VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPI_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid KPI_ID
		{
			get
			{
				return this._KPI_ID;
			}
			set
			{
				if ((this._KPI_ID != value))
				{
					if (this._KPI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKPI_IDChanging(value);
					this.SendPropertyChanging();
					this._KPI_ID = value;
					this.SendPropertyChanged("KPI_ID");
					this.OnKPI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARGET", DbType="Decimal(12,2) NOT NULL")]
		public decimal TARGET
		{
			get
			{
				return this._TARGET;
			}
			set
			{
				if ((this._TARGET != value))
				{
					this.OnTARGETChanging(value);
					this.SendPropertyChanging();
					this._TARGET = value;
					this.SendPropertyChanged("TARGET");
					this.OnTARGETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THRESHOLD_TYPE", DbType="Bit NOT NULL")]
		public bool THRESHOLD_TYPE
		{
			get
			{
				return this._THRESHOLD_TYPE;
			}
			set
			{
				if ((this._THRESHOLD_TYPE != value))
				{
					this.OnTHRESHOLD_TYPEChanging(value);
					this.SendPropertyChanging();
					this._THRESHOLD_TYPE = value;
					this.SendPropertyChanged("THRESHOLD_TYPE");
					this.OnTHRESHOLD_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THRESHOLD", DbType="Decimal(12,2) NOT NULL")]
		public decimal THRESHOLD
		{
			get
			{
				return this._THRESHOLD;
			}
			set
			{
				if ((this._THRESHOLD != value))
				{
					this.OnTHRESHOLDChanging(value);
					this.SendPropertyChanging();
					this._THRESHOLD = value;
					this.SendPropertyChanged("THRESHOLD");
					this.OnTHRESHOLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KPI_KPI_VALUE", Storage="_KPI", ThisKey="KPI_ID", OtherKey="ID", IsForeignKey=true)]
		public KPI KPI
		{
			get
			{
				return this._KPI.Entity;
			}
			set
			{
				KPI previousValue = this._KPI.Entity;
				if (((previousValue != value) 
							|| (this._KPI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KPI.Entity = null;
						previousValue.KPI_VALUEs.Remove(this);
					}
					this._KPI.Entity = value;
					if ((value != null))
					{
						value.KPI_VALUEs.Add(this);
						this._KPI_ID = value.ID;
					}
					else
					{
						this._KPI_ID = default(System.Guid);
					}
					this.SendPropertyChanged("KPI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
